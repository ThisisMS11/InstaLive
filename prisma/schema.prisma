// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model User {
  id            String        @id @default(cuid())
  name          String?
  username      String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  admin         Boolean       @default(false)
  accounts      Account[]
  youtube       YouTube?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model YouTube {
  id                String    @id @default(uuid())
  userId            String    @unique
  channelId         String
  title             String
  description       String?
  customUrl         String?
  thumbnail         String?
  publishedAt       DateTime
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([userId, channelId], name: "user_channel_unique")
}